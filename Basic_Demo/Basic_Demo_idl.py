# Python stubs generated by omniidl from Basic_Demo.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Basic_Demo"
#
__name__ = "Basic_Demo"
_0_Basic_Demo = omniORB.openModule("Basic_Demo", r"Basic_Demo.idl")
_0_Basic_Demo__POA = omniORB.openModule("Basic_Demo__POA", r"Basic_Demo.idl")


# interface Add_Operator
_0_Basic_Demo._d_Add_Operator = (omniORB.tcInternal.tv_objref, "IDL:Basic_Demo/Add_Operator:1.0", "Add_Operator")
omniORB.typeMapping["IDL:Basic_Demo/Add_Operator:1.0"] = _0_Basic_Demo._d_Add_Operator
_0_Basic_Demo.Add_Operator = omniORB.newEmptyClass()
class Add_Operator :
    _NP_RepositoryId = _0_Basic_Demo._d_Add_Operator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Basic_Demo.Add_Operator = Add_Operator
_0_Basic_Demo._tc_Add_Operator = omniORB.tcInternal.createTypeCode(_0_Basic_Demo._d_Add_Operator)
omniORB.registerType(Add_Operator._NP_RepositoryId, _0_Basic_Demo._d_Add_Operator, _0_Basic_Demo._tc_Add_Operator)

# Add_Operator operations and attributes
Add_Operator._d_add = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (omniORB.tcInternal.tv_float, ), None)

# Add_Operator object reference
class _objref_Add_Operator (CORBA.Object):
    _NP_RepositoryId = Add_Operator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def add(self, *args):
        return self._obj.invoke("add", _0_Basic_Demo.Add_Operator._d_add, args)

omniORB.registerObjref(Add_Operator._NP_RepositoryId, _objref_Add_Operator)
_0_Basic_Demo._objref_Add_Operator = _objref_Add_Operator
del Add_Operator, _objref_Add_Operator

# Add_Operator skeleton
__name__ = "Basic_Demo__POA"
class Add_Operator (PortableServer.Servant):
    _NP_RepositoryId = _0_Basic_Demo.Add_Operator._NP_RepositoryId


    _omni_op_d = {"add": _0_Basic_Demo.Add_Operator._d_add}

Add_Operator._omni_skeleton = Add_Operator
_0_Basic_Demo__POA.Add_Operator = Add_Operator
omniORB.registerSkeleton(Add_Operator._NP_RepositoryId, Add_Operator)
del Add_Operator
__name__ = "Basic_Demo"

#
# End of module "Basic_Demo"
#
__name__ = "Basic_Demo_idl"

_exported_modules = ( "Basic_Demo", )

# The end.
