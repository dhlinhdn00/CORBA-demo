# Python stubs generated by omniidl from QA.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Advanced_Demo"
#
__name__ = "Advanced_Demo"
_0_Advanced_Demo = omniORB.openModule("Advanced_Demo", r"QA.idl")
_0_Advanced_Demo__POA = omniORB.openModule("Advanced_Demo__POA", r"QA.idl")


# interface QASystem
_0_Advanced_Demo._d_QASystem = (omniORB.tcInternal.tv_objref, "IDL:Advanced_Demo/QASystem:1.0", "QASystem")
omniORB.typeMapping["IDL:Advanced_Demo/QASystem:1.0"] = _0_Advanced_Demo._d_QASystem
_0_Advanced_Demo.QASystem = omniORB.newEmptyClass()
class QASystem :
    _NP_RepositoryId = _0_Advanced_Demo._d_QASystem[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Advanced_Demo.QASystem = QASystem
_0_Advanced_Demo._tc_QASystem = omniORB.tcInternal.createTypeCode(_0_Advanced_Demo._d_QASystem)
omniORB.registerType(QASystem._NP_RepositoryId, _0_Advanced_Demo._d_QASystem, _0_Advanced_Demo._tc_QASystem)

# QASystem operations and attributes
QASystem._d_ask = (((omniORB.tcInternal.tv_string,0), ), ((omniORB.tcInternal.tv_string,0), ), None)

# QASystem object reference
class _objref_QASystem (CORBA.Object):
    _NP_RepositoryId = QASystem._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def ask(self, *args):
        return self._obj.invoke("ask", _0_Advanced_Demo.QASystem._d_ask, args)

omniORB.registerObjref(QASystem._NP_RepositoryId, _objref_QASystem)
_0_Advanced_Demo._objref_QASystem = _objref_QASystem
del QASystem, _objref_QASystem

# QASystem skeleton
__name__ = "Advanced_Demo__POA"
class QASystem (PortableServer.Servant):
    _NP_RepositoryId = _0_Advanced_Demo.QASystem._NP_RepositoryId


    _omni_op_d = {"ask": _0_Advanced_Demo.QASystem._d_ask}

QASystem._omni_skeleton = QASystem
_0_Advanced_Demo__POA.QASystem = QASystem
omniORB.registerSkeleton(QASystem._NP_RepositoryId, QASystem)
del QASystem
__name__ = "Advanced_Demo"

#
# End of module "Advanced_Demo"
#
__name__ = "QA_idl"

_exported_modules = ( "Advanced_Demo", )

# The end.
