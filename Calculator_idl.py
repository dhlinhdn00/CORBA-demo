# Python stubs generated by omniidl from Calculator.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Demo"
#
__name__ = "Demo"
_0_Demo = omniORB.openModule("Demo", r"Calculator.idl")
_0_Demo__POA = omniORB.openModule("Demo__POA", r"Calculator.idl")


# interface Calculator
_0_Demo._d_Calculator = (omniORB.tcInternal.tv_objref, "IDL:Demo/Calculator:1.0", "Calculator")
omniORB.typeMapping["IDL:Demo/Calculator:1.0"] = _0_Demo._d_Calculator
_0_Demo.Calculator = omniORB.newEmptyClass()
class Calculator :
    _NP_RepositoryId = _0_Demo._d_Calculator[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Demo.Calculator = Calculator
_0_Demo._tc_Calculator = omniORB.tcInternal.createTypeCode(_0_Demo._d_Calculator)
omniORB.registerType(Calculator._NP_RepositoryId, _0_Demo._d_Calculator, _0_Demo._tc_Calculator)

# Calculator operations and attributes
Calculator._d_add = ((omniORB.tcInternal.tv_float, omniORB.tcInternal.tv_float), (omniORB.tcInternal.tv_float, ), None)

# Calculator object reference
class _objref_Calculator (CORBA.Object):
    _NP_RepositoryId = Calculator._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def add(self, *args):
        return self._obj.invoke("add", _0_Demo.Calculator._d_add, args)

omniORB.registerObjref(Calculator._NP_RepositoryId, _objref_Calculator)
_0_Demo._objref_Calculator = _objref_Calculator
del Calculator, _objref_Calculator

# Calculator skeleton
__name__ = "Demo__POA"
class Calculator (PortableServer.Servant):
    _NP_RepositoryId = _0_Demo.Calculator._NP_RepositoryId


    _omni_op_d = {"add": _0_Demo.Calculator._d_add}

Calculator._omni_skeleton = Calculator
_0_Demo__POA.Calculator = Calculator
omniORB.registerSkeleton(Calculator._NP_RepositoryId, Calculator)
del Calculator
__name__ = "Demo"

#
# End of module "Demo"
#
__name__ = "Calculator_idl"

_exported_modules = ( "Demo", )

# The end.
